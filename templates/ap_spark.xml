<templateSet group="ap_spark">
  <template name="ss" value="val spark: org.apache.spark.sql.SparkSession = org.apache.spark.sql.SparkSession.builder()&#10;                            .appName(&quot;$APP_NAME$&quot;)&#10;                            .master(&quot;local[*]&quot;)&#10;                            .config(&quot;option&quot;, &quot;some-value&quot;)&#10;                            .getOrCreate()" description="Creating spark session" toReformat="true" toShortenFQNames="true">
    <variable name="APP_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SCALA" value="true" />
    </context>
  </template>
  <template name="sst_read" value="    val lines = spark.readStream&#10;      .format(&quot;socket&quot;)&#10;      .option(&quot;host&quot;, &quot;localhost&quot;)&#10;      .option(&quot;port&quot;, 9999)&#10;      .load()" description="Spark Streaming Readstream" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="SCALA" value="true" />
    </context>
  </template>
  <template name="sst_write" value="    val query = lines.writeStream&#10;      .outputMode(&quot;update&quot;)&#10;      .format(&quot;console&quot;)&#10;      .start()&#10;      &#10;    query.awaitTermination()&#10;" description="Spark Streaming WriteStream" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="SCALA" value="true" />
    </context>
  </template>
</templateSet>